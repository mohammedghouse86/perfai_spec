openapi: 3.0.0
paths:
  /api/v1/performance-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/performance-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
  /api/v1/performance-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
  /api/v1/performance-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/performance-service/apps/ai-logs:
    get:
      operationId: AppsController_GetAILogs
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/performance-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Run'
  /api/v1/performance-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
  /api/v1/performance-service/apps/api-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/performance-service/apps/api-score:
    get:
      operationId: AppsController_getApiScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/performance-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
  /api/v1/org-users:
    get:
      operationId: OrgUsersController_getUsers
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/org-users/get_users_orgs:
    get:
      operationId: OrgUsersController_getChildOrgs
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/runs/endpoints:
    get:
      operationId: RunsController_getEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/runs/previous-endpoints:
    get:
      operationId: RunsController_getPreviousEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/runs/next-endpoints:
    get:
      operationId: RunsController_getNextEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/endpoints-global:
    get:
      operationId: GlobalEndpointPerformancesController_getGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/endpoints-global/previous:
    get:
      operationId: GlobalEndpointPerformancesController_getPreviousGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/endpoints-global/next:
    get:
      operationId: GlobalEndpointPerformancesController_getnextGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/integration/emails:
    put:
      operationId: IntegrationEmailsController_updateEmailNotification
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationEmailDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: IntegrationEmailsController_getEmailNotification
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIntegrationEmailDto'
  /api/v1/integration/emails/governance-email:
    put:
      operationId: IntegrationEmailsController_updateGovernanceEmailNotification
      parameters:
        - name: email
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/integration/emails/Governance-email:
    get:
      operationId: IntegrationEmailsController_getGovernanceEmailNotification
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/integration/slacks:
    put:
      operationId: IntegrationSlacksController_createSlackIntegration
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationSlackDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: IntegrationSlacksController_getSlackIntegration
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/integration/slacks/test:
    post:
      operationId: IntegrationSlacksController_send
      parameters: []
      responses:
        '201':
          description: ''
  /api/v1/integration/github/create:
    put:
      operationId: GithubIntegrationController_createGithubIntegration
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGithubIntegrationDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/integration/github:
    get:
      operationId: GithubIntegrationController_getGithubIntegration
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/auths:
    post:
      operationId: AuthenticationsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthenticationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthenticationDto'
    put:
      operationId: AuthenticationsController_update
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthenticationsDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: AuthenticationsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    delete:
      operationId: AuthenticationsController_remove
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/auths/validate:
    post:
      operationId: AuthenticationsController_validate
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthenticationsDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/auths/single:
    get:
      operationId: AuthenticationsController_findOne
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/default-reports:
    get:
      operationId: DefaultReportController_GetDefaultReport
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/default-reports/previous:
    get:
      operationId: DefaultReportController_getPreviousDefaultReport
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/default-reports/next:
    get:
      operationId: DefaultReportController_getNextDefaultReport
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/b2-c:
    get:
      operationId: B2CController_getbusinessToCustomer
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/b2-c/previous:
    get:
      operationId: B2CController_getPreviousGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/b2-c/next:
    get:
      operationId: B2CController_getnextGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/integration/jira/create:
    put:
      operationId: IntegrationJiraController_createIntegrationJira
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationJiraDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/integration/jira:
    get:
      operationId: IntegrationJiraController_getIntegrationJira
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/issues/performance/performance-issues:
    get:
      operationId: PerformanceIssueController_getGlobalEndpoints
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/performance/single-issue:
    get:
      operationId: PerformanceIssueController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/orgs/saveChanges:
    post:
      operationId: OrgsController_saveChanges
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/orgs/my:
    get:
      operationId: OrgsController_getMyOrg
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/orgs/make_child_org:
    post:
      operationId: OrgsController_makeChildOrg
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/orgs/make_org:
    post:
      operationId: OrgsController_makeOrg
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTest'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTest'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/test-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
  /api/v1/test-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTest'
  /api/v1/test-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/test-service/apps/ai-logs:
    get:
      operationId: AppsController_GetAILogs
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
  /api/v1/test-service/apps/api-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-service/apps/api-score:
    get:
      operationId: AppsController_getApiScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-service/apps/endpoints:
    get:
      operationId: AppsController_getEndpoints
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-service/apps/testIssues:
    get:
      operationId: AppsController_GetTestIssues
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test_Run'
  /api/v1/test/runs/endpoints:
    get:
      operationId: DasRunsController_getEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/issues/test/test-issues:
    get:
      operationId: TestIssueController_getGlobalEndpoints
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/test/single-issue:
    get:
      operationId: TestIssueController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/users/me:
    get:
      operationId: UsersController_getMe
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/users/{id}:
    get:
      operationId: UsersController_getUserById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/users/update:
    post:
      operationId: UsersController_updateUser
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/users/post-login:
    post:
      operationId: UsersController_postLogin
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserDto'
  /api/v1/users/invite:
    post:
      operationId: UsersController_inviteUsers
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/users/resend-invite:
    post:
      operationId: UsersController_resendInviteUsers
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/score-stats:
    get:
      operationId: OrgScoreStatsController_getScoreStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run:
    post:
      operationId: WeeklyReportController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWeeklyReportDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/run/weekly-report:
    get:
      operationId: WeeklyReportController_getReport
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/certifications/getperfapis:
    post:
      operationId: CertificationsController_findAll
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/certifications/getapitests:
    post:
      operationId: CertificationsController_findAllApiTests
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/certifications/orgDetails:
    post:
      operationId: CertificationsController_findOrgDetails
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/issues/test-plan/test-plan-service-issues:
    get:
      operationId: TestPlanServiceIssuesController_getGlobalEndpoints
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/test-plan/single-issue:
    get:
      operationId: TestPlanServiceIssuesController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/test-plan-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestPlanDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestPlanDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestPlanDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-plan-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestPlanDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestPlanDto'
  /api/v1/test-plan-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestPlanDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
  /api/v1/test-plan-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateTestPlanDto'
  /api/v1/test-plan-service/apps/ai-logs:
    get:
      operationId: AppsController_GetAILogs
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-plan-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test_Plan_Run'
  /api/v1/test-plan-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestPlanDto'
  /api/v1/test-plan-service/apps/api-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-plan-service/apps/api-score:
    get:
      operationId: AppsController_getApiScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-plan-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
  /api/v1/test-plan-service/apps/endpoints:
    get:
      operationId: AppsController_getEndpoints
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-plan/runs/endpoints:
    get:
      operationId: TestPlanRunsController_getEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/api-catalog/apps/create-run:
    post:
      operationId: ApiCatalogController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiCatalogDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/create-run-multiple:
    post:
      operationId: ApiCatalogController_createRunAppMultiple
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSpecsDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/schedule-run-multiple:
    post:
      operationId: ApiCatalogController_scheduleRunMultiple
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRunMultipleDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/all_service_run_status:
    get:
      operationId: ApiCatalogController_getAllServicesRunStatus
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/default-email:
    get:
      operationId: ApiCatalogController_findDefaultEmail
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/api-catalog/apps/all:
    get:
      operationId: ApiCatalogController_findAll
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/all-service-data:
    get:
      operationId: ApiCatalogController_findAllServiceData
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps:
    put:
      operationId: ApiCatalogController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiCatalogDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: ApiCatalogController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCatalog'
    delete:
      operationId: ApiCatalogController_deleteAppById
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/health:
    get:
      operationId: ApiCatalogController_health
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/catalog_id_name_label:
    get:
      operationId: ApiCatalogController_getCatalogIdNameLabel
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/get-run-report:
    get:
      operationId: ApiCatalogController_getRunReport
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/send-consolidated-report:
    get:
      operationId: ApiCatalogController_sendConsolidatedReport
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/design-analysis-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDesignAnalysisDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDesignAnalysisDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDesignAnalysisDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignAnalysis'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignAnalysis'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/design-analysis-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDesignAnalysisDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDesignAnalysisDto'
  /api/v1/design-analysis-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDesignAnalysisDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignAnalysis'
  /api/v1/design-analysis-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/design-analysis-service/apps/getIssues:
    get:
      operationId: AppsController_findIssuesById
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: status
          required: true
          in: query
          schema:
            enum:
              - Open
              - Dismissed
            type: string
      responses:
        '200':
          description: ''
  /api/v1/design-analysis-service/apps/ai-logs:
    get:
      operationId: AppsController_GetAILogs
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Das_Run'
  /api/v1/design-analysis-service/apps/org-categories:
    get:
      operationId: AppsController_findOrgCategories
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/design-analysis-service/apps/update-category-status:
    patch:
      operationId: AppsController_updateOrgCategoryStatus
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryStatusDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDesignAnalysisDto'
  /api/v1/design-analysis-service/apps/api-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/api-score:
    get:
      operationId: AppsController_getApiScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/design-analysis-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
  /api/v1/design-analysis-service/apps/endpoints:
    get:
      operationId: AppsController_getEndpoints
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/design-analysis-service/apps/find-app-categories:
    get:
      operationId: AppsController_findAppCategories
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppCategories'
  /api/v1/design-analysis-service/apps/update-app-category:
    put:
      operationId: AppsController_updateAppCategory
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppCategoryDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/update-issue-status:
    patch:
      operationId: AppsController_updateIssueStatus
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueStatusDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/issues/design-analysis/design-issues:
    get:
      operationId: DesignIssueController_getDesignIssues
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/design-analysis/single-issue:
    get:
      operationId: DesignIssueController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/reports/all:
    get:
      operationId: ReportsController_getAllReports
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/reports/one:
    get:
      operationId: ReportsController_getOneReports
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/reports/download:
    get:
      operationId: ReportsController_getReportFile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/reports/file:
    get:
      operationId: ReportsController_getReportFileById
      parameters:
        - name: _id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/reports/delete-reports:
    get:
      operationId: ReportsController_deleteReports
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionManagementDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVersionManagementDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionManagementDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionManagement'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionManagement'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionManagementDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVersionManagementDto'
  /api/v1/version-management-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionManagementDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionManagement'
  /api/v1/version-management-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/contract-all:
    get:
      operationId: AppsController_contractFindAll
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVersionManagementDto'
  /api/v1/version-management-service/apps/api-version:
    get:
      operationId: AppsController_GetAppVersion
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/api-versions:
    get:
      operationId: AppsController_GetAppVersions
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/api_version_download_yaml:
    get:
      operationId: AppsController_downloadReleaseLogsYaml
      parameters:
        - name: _id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/version-management-service/apps/changelog:
    get:
      operationId: AppsController_GetChangelog
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/versionChangelog:
    get:
      operationId: AppsController_VersionChangeLog
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/version-management-service/apps/exactVersion:
    get:
      operationId: AppsController_ExactVersion
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: version
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/endpoints:
    get:
      operationId: AppsController_endpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/version-management-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VmsRun'
  /api/v1/version-management-service/apps/endpoint-score:
    get:
      operationId: AppsController_getEndpointScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/version-management-service/apps/stable-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/week-changes:
    get:
      operationId: AppsController_getWeekChanges
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/update-version-number:
    post:
      operationId: AppsController_updateVersionNumber
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVersionNumberDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/send-release:
    post:
      operationId: AppsController_sendRelease
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReleaseDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/download-release-report:
    get:
      operationId: AppsController_getReleaseReportDownload
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/download-html-release-report:
    get:
      operationId: AppsController_downloadHtmlReleaseReport
      parameters:
        - name: appId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/issues/vms-service/vms-issues:
    get:
      operationId: VmsIssueController_getGlobalEndpoints
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/vms-service/single-issue:
    get:
      operationId: VmsIssueController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensitiveDataDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSensitiveDataDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensitiveDataDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveData'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveData'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/sensitive-data-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensitiveDataDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSensitiveDataDto'
  /api/v1/sensitive-data-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensitiveDataDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveData'
  /api/v1/sensitive-data-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: type
          required: true
          in: query
          schema:
            type: string
        - name: categoryProfile
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunDetails'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSensitiveDataDto'
  /api/v1/sensitive-data-service/apps/endpoints:
    get:
      operationId: AppsController_endpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/endpoint-piis:
    get:
      operationId: AppsController_getEndpointPIIS
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/download-issues-report:
    get:
      operationId: AppsController_getIssuesReportDownload
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/download-issues-report-security:
    get:
      operationId: AppsController_getSecurityIssuesReportDownload
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/download-sensitive-data:
    get:
      operationId: AppsController_getEndpointPIISDownload
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/download-non-sensitive-data:
    get:
      operationId: AppsController_getEndpointNonPIISDownload
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/issues:
    get:
      operationId: AppsController_getIssues
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    post:
      operationId: AppsController_postIssues
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgUser'
  /api/v1/sensitive-data-service/apps/rbac_map:
    get:
      operationId: AppsController_getRBACMap
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/update_rbac_map:
    put:
      operationId: AppsController_putRBACMap
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/app_issues:
    get:
      operationId: AppsController_getAppIssues
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/app_issues_security:
    get:
      operationId: AppsController_getAppIssuesSecurity
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/org_issues:
    get:
      operationId: AppsController_getOrgIssues
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/org_issues_ids:
    get:
      operationId: AppsController_getOrgIssueIds
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/app-secure-endpoints:
    get:
      operationId: AppsController_getAppSecureEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/issues-single:
    get:
      operationId: AppsController_getSingleIssue
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/all-issues-ids:
    get:
      operationId: AppsController_getAllIssueIDs
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/all-issues-ids-security:
    get:
      operationId: AppsController_getAllIssueIDsSecurity
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-summary-count:
    get:
      operationId: AppsController_getSummaryCount
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-owasp-data:
    get:
      operationId: AppsController_getOwaspData
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/endpoint-nonpiis:
    get:
      operationId: AppsController_getEndpointNonPIIS
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/field-logs:
    post:
      operationId: AppsController_getFieldLogs
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldLogsDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SdsRun'
  /api/v1/sensitive-data-service/apps/tags-count:
    get:
      operationId: AppsController_getTagsCount
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/compliant-apps-count:
    get:
      operationId: AppsController_getCompliantAppCount
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/week-changes:
    get:
      operationId: AppsController_getWeekChanges
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/updateImpactStatus:
    put:
      operationId: AppsController_updateImpactStatus
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImpactStatusDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/updateStatus:
    put:
      operationId: AppsController_updateStatus
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/dismiss-issue:
    patch:
      operationId: AppsController_dismissIssue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissEndpointIssueDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/dismiss-issue-endpoints:
    patch:
      operationId: AppsController_dismissIssueEndpoints
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissPartialEndpointsIssueDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/dismiss-app-issue:
    patch:
      operationId: AppsController_dismissAppIssue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissAppIssueDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-dismissed-issues:
    get:
      operationId: AppsController_getDismissedIssues
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-dismissed-issues-security:
    get:
      operationId: AppsController_getDismissedIssuesSecurity
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-dismissed-issues-ids:
    get:
      operationId: AppsController_getDismissedIssuesIDs
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-dismissed-issues-ids-security:
    get:
      operationId: AppsController_getDismissedIssuesSecurityIDs
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/dismissed-issues-single:
    get:
      operationId: AppsController_getSingleClosedIssue
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-error-flags:
    get:
      operationId: AppsController_getErrorFlags
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-policy-urls:
    get:
      operationId: AppsController_getPolicyUrls
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-fields:
    get:
      operationId: AppsController_getFields
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-endpoint-schema:
    get:
      operationId: AppsController_getEndpointSchema
      parameters:
        - name: endpoint_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/remove-fields:
    patch:
      operationId: AppsController_removeFields
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFieldsDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-test-cases:
    get:
      operationId: AppsController_getTestCases
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: testType
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-test-cases-ids:
    get:
      operationId: AppsController_getTestCasesID
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: testType
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-test-plan:
    get:
      operationId: AppsController_getTestPlan
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/generate_sensitive_data_reports:
    post:
      operationId: AppsController_generateSensitiveDataReports
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/create-issue:
    post:
      operationId: AppsController_createIssue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/update-endpoint-stats:
    post:
      operationId: AppsController_updateEndpointStats
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-endpoint-stats:
    get:
      operationId: AppsController_getEndpointRunStats
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: category
          required: false
          in: query
          schema:
            type: string
        - name: path
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-log-ids-stats:
    get:
      operationId: AppsController_getEndpointLogsIdsRunStats
      parameters:
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: category
          required: false
          in: query
          schema:
            type: string
        - name: path
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/single-stats/{id}:
    get:
      operationId: AppsController_getLogById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/coverage_details/{app_id}:
    get:
      operationId: AppsController_getCoverageDetails
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/update-issue-severity:
    patch:
      operationId: AppsController_updateIssueSeverity
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueSeverityDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/save-ai-logs:
    post:
      operationId: AppsController_generateAILogs
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/get-ai-logs:
    get:
      operationId: AppsController_getStreamAILogs
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-ai-stats:
    get:
      operationId: AppsController_getAIStats
      parameters: []
      responses:
        '200':
          description: ''
  /storage/dropbox_sso:
    post:
      operationId: StorageController_dropboxSSO
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /storage/save_dropbox:
    post:
      operationId: StorageController_saveDropbox
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/save_dropbox_fields:
    post:
      operationId: StorageController_saveDropboxFields
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/get_dropbox_user:
    get:
      operationId: StorageController_getDropboxUser
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/revoke_dropbox_access:
    post:
      operationId: StorageController_revokeDropboxAccess
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/get_google_drive:
    get:
      operationId: StorageController_getGoogleDrive
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/google_drive_sso:
    post:
      operationId: StorageController_googleDriveSSO
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/save_google_drive:
    post:
      operationId: StorageController_saveGoogleDrive
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/save_google_drive_fields:
    post:
      operationId: StorageController_saveGoogleDriveFields
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/revoke_google_drive_access:
    post:
      operationId: StorageController_revokeGoogleDriveAccess
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/one_drive_sso:
    post:
      operationId: StorageController_oneDriveSSO
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /storage/save_one_drive:
    post:
      operationId: StorageController_saveOneDrive
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/get_one_drive:
    get:
      operationId: StorageController_getOneDrive
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/revoke_one_drive_access:
    post:
      operationId: StorageController_revokeOneDriveAccess
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/save_one_drive_fields:
    post:
      operationId: StorageController_saveOneDriveFields
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /notification:
    get:
      operationId: NotificationController_getNotification
      parameters: []
      responses:
        '200':
          description: ''
    delete:
      operationId: NotificationController_deleteNotification
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /notification/all:
    delete:
      operationId: NotificationController_deleteAllNotification
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /notification/status:
    patch:
      operationId: NotificationController_updateNotificationStatus
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/category:
    post:
      operationId: TestCategoryController_SecurityCategories
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCategoryDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: TestCategoryController_UpdateSecurityCategories
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCategoryDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: TestCategoryController_getSingleSecurityCategory
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/category/all:
    get:
      operationId: TestCategoryController_getSecurityCategories
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/category/category_profile_map:
    get:
      operationId: TestCategoryController_getTestCategoryProfileMap
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/apigateway/create-account:
    post:
      operationId: ApiGatewayController_createAccount
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiGatewayAccDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/update-account:
    post:
      operationId: ApiGatewayController_updateAccount
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiGatewayAccDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/get-accounts:
    get:
      operationId: ApiGatewayController_getAccounts
      parameters:
        - name: gateway
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/apigateway/get-account:
    get:
      operationId: ApiGatewayController_getAccountById
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/get-apis:
    get:
      operationId: ApiGatewayController_getApis
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/get-specs:
    post:
      operationId: ApiGatewayController_getSpecs
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSpecsDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/apigateway/delete-account:
    delete:
      operationId: ApiGatewayController_deleteAccount
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/refresh-apigee-token:
    patch:
      operationId: ApiGatewayController_refreshApigeeAccountToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiGatewayAccDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigee-auth-service/apps/test-connection:
    get:
      operationId: ApigeeAuthController_testConnection
      parameters:
        - name: clientId
          required: true
          in: query
          schema:
            type: string
        - name: clientSecret
          required: true
          in: query
          schema:
            type: string
        - name: redirectUri
          required: true
          in: query
          schema:
            type: string
        - name: apiKey
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/apigee-auth-service/apps/oauth2callback:
    get:
      operationId: ApigeeAuthController_oauth2Callback
      parameters:
        - name: code
          required: true
          in: query
          schema:
            type: string
        - name: state
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/aws-auth-service/apps/test-connection:
    post:
      operationId: AwsAuthController_testConnection
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestConnectionDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/mulesoft-auth-service/apps/test-connection:
    post:
      operationId: MulesoftAuthController_testConnection
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestConnectionDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/kong-auth-service/apps/test-connection:
    post:
      operationId: KongAuthController_testConnection
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestConnectionDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/auth/token:
    post:
      operationId: AuthController_getToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTokenDto'
      responses:
        '201':
          description: ''
  /dashboard/issues_by_severity:
    get:
      operationId: DashboardController_getIssuesPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/active_issues_by_severity:
    get:
      operationId: DashboardController_getActiveIssuesPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_dismissed_issues_by_severity:
    get:
      operationId: DashboardController_getDismissedIssuesBySeverity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_blocked_issues_by_severity:
    get:
      operationId: DashboardController_getBlockedIssuesBySeverity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_active_vs_closed_issues:
    get:
      operationId: DashboardController_getActiveVsCloseIssues
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_api_catalog_per_week:
    get:
      operationId: DashboardController_getApiCatalogPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_endpoints_per_week:
    get:
      operationId: DashboardController_getTotalEndpointsPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/sensitive_data_per_week:
    get:
      operationId: DashboardController_getSensitiveDataPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/total_tests_per_week:
    get:
      operationId: DashboardController_getTotalTestsPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/total_runs_per_week:
    get:
      operationId: DashboardController_getTotalRunsPerWeek
      parameters:
        - name: weeks
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/top_leaky_apis:
    get:
      operationId: DashboardController_getTopLeakyApis
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/top_leaks_by_type:
    get:
      operationId: DashboardController_getTopLeakTypes
      parameters:
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/security/top_leaks_by_type:
    get:
      operationId: DashboardController_getTopLeakTypesSecurity
      parameters:
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/top_leaks_by_category:
    get:
      operationId: DashboardController_getTopLeakCategory
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/open_issues_with_severity_and_type:
    get:
      operationId: DashboardController_getOpenIssuesWithSeverityAndType
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/all_issues_all_closed:
    get:
      operationId: DashboardController_getAllIssuesVsCloseIssues
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/security/all_issues_all_closed:
    get:
      operationId: DashboardController_getAllIssuesVsCloseIssuesSecurity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/tasks:
    get:
      operationId: TasksController_findOldestPendingTask
      parameters:
        - name: worker_id
          required: true
          in: query
          schema:
            type: string
        - name: taskType
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/tasks/{task_id}:
    post:
      operationId: TasksController_saveResult
      parameters:
        - name: task_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/tasks/abort/{app_id}:
    post:
      operationId: TasksController_abortLastRun
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
        - name: taskType
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/services/run:
    post:
      operationId: IntegrationsController_scheduleRunMultiple
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRunMultipleDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/services/status:
    get:
      operationId: IntegrationsController_getAllServicesRunStatus
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/dsr-service/create:
    post:
      operationId: DSRRequestController_createRequest
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDsrRequestDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSRRequests'
  /api/v1/dsr-service/verify-email:
    post:
      operationId: DSRRequestController_verifyEmail
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/dsr-service/resolve-request:
    patch:
      operationId: DSRRequestController_resolveRequest
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolveRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/dsr-service/app-requests:
    get:
      operationId: DSRRequestController_findAll
      parameters:
        - name: appId
          required: false
          in: query
          schema:
            type: string
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/dsr-service/app-requests-single:
    get:
      operationId: DSRRequestController_findSingle
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/dsr-service/app-requests-edit:
    patch:
      operationId: DSRRequestController_findApptoEdit
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/dsr-service/agent:
    post:
      operationId: DSRRequestController_processInput
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
    get:
      operationId: DSRRequestController_getChats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: DSRRequestController_deleteState
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent:
    post:
      operationId: PerfAiAgentController_handleChat
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
    get:
      operationId: PerfAiAgentController_getChats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: PerfAiAgentController_deleteState
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/chat/stream:
    get:
      operationId: PerfAiAgentController_streamChat
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/tasks:
    get:
      operationId: PerfAiAgentController_getTasks
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/perf/engine/test_SSRF_Endpoint/{project_id}/org/{org_id}/tenant/{tenant_id}:
    post:
      operationId: PerfEngineController_testSSRFEndpoint
      parameters:
        - name: url
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /api/v1/perf/engine/simple_get:
    get:
      operationId: PerfEngineController_simple
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/perf/engine/logout:
    post:
      operationId: PerfEngineController_logout
      parameters: []
      responses:
        '201':
          description: ''
  /api/v1/perf/engine/date_range:
    get:
      operationId: PerfEngineController_dateRange
      parameters:
        - name: start
          required: true
          in: query
          schema:
            type: string
        - name: end
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/perf/engine/search:
    post:
      operationId: PerfEngineController_search
      parameters: []
      responses:
        '201':
          description: ''
  /api/v1/perf/engine/tests:
    get:
      operationId: PerfEngineController_getTests
      parameters:
        - name: status
          required: true
          in: query
          schema:
            type: string
        - name: sort
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
        - name: offset
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
  /api/v1/learned_models/endpoints/{app_id}:
    get:
      operationId: LearnedModelsController_getEndpoints
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
  /api/v1/learned_models/endpoint:
    put:
      operationId: LearnedModelsController_saveChanges
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateEndpointRequestDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
  /api/v1/learned_models/learn/{app_id}:
    post:
      operationId: LearnedModelsController_learnEndpoints
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /api/v1/agents:
    get:
      operationId: AgentsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    post:
      operationId: AgentsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
info:
  title: PerfAI Dashboard API
  description: PerfAI Dashboard API
  version: '1.0'
  contact: {}
tags:
  - name: API
    description: ''
servers: []
components:
  schemas:
    LatestRun:
      type: object
      properties:
        status:
          type: string
        ai_coverage_percentage:
          type: number
        top_10_coverage:
          type: number
        score:
          type: number
        api_name:
          type: string
        total_endpoints:
          type: number
        total_fail:
          type: number
        total_high:
          type: number
        total_medium:
          type: number
        total_low:
          type: number
        run_number:
          type: number
        validation_erros:
          type: string
        latency:
          type: number
        region:
          type: string
      required:
        - status
        - ai_coverage_percentage
        - top_10_coverage
        - score
        - api_name
        - total_endpoints
        - total_fail
        - total_high
        - total_medium
        - total_low
        - run_number
        - validation_erros
        - latency
        - region
    CreateAppDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        cron:
          type: string
        testRegion:
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          enum:
            - STANDARD
            - GET
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        aiLearnPolicy:
          enum:
            - STANDARD
            - RELEARN
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    BuildDetailsDto:
      type: object
      properties:
        commitId:
          type: string
        commitUrl:
          type: string
        commitUsername:
          type: string
        commitDate:
          type: string
        repoName:
          type: string
        comment:
          type: string
      required:
        - commitId
        - commitUrl
        - commitUsername
        - commitDate
        - repoName
    App:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        testRegion:
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - PRO
          type: string
        performance:
          default: High-Performance
          enum:
            - High-Performance
            - Medium-Performance
            - Low-Performance
          type: string
        coveragePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - GET
          type: string
        aiLearnPolicy:
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        catalog_id:
          type: string
        modified_on:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - org_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - catalog_id
        - modified_on
    Run:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    CreateIntegrationEmailDto:
      type: object
      properties:
        org_id:
          type: string
        email_list:
          type: string
        active:
          type: boolean
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - email_list
        - active
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    CreateIntegrationSlackDto:
      type: object
      properties:
        org_id:
          type: string
        token:
          type: string
        channel:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - token
        - channel
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    CreateGithubIntegrationDto:
      type: object
      properties:
        org_id:
          type: string
        username:
          type: string
        repo:
          type: string
        token:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - username
        - repo
        - token
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    CreateAuthenticationDto:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
        body:
          type: string
        headers:
          type: string
        login_headers:
          type: string
        auth_type:
          type: string
        username:
          type: string
        password:
          type: string
        clientsecret:
          type: string
        clientid:
          type: string
        api_key:
          type: string
        bearer_token:
          type: string
        body_type:
          type: string
        org_id:
          type: string
        status:
          type: boolean
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        privilege:
          type: string
        isEncrypted:
          type: boolean
        selectedToken:
          type: string
      required:
        - label
        - org_id
        - status
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
        - privilege
        - isEncrypted
    UpdateAuthenticationsDto:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
        body:
          type: string
        headers:
          type: string
        org_id:
          type: string
        status:
          type: boolean
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        privilege:
          type: string
        isEncrypted:
          type: boolean
        selectedToken:
          type: string
      required:
        - label
        - org_id
        - status
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
        - privilege
        - isEncrypted
    CreateIntegrationJiraDto:
      type: object
      properties:
        org_id:
          type: string
        token:
          type: string
        url:
          type: string
        projectKey:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - token
        - url
        - projectKey
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    AppTest:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        testRegion:
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - GET
          type: string
        aiLearnPolicy:
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    Test_Run:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        nickname:
          type: string
        email_verified:
          type: boolean
        picture:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        invited_on:
          format: date-time
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        joined_on:
          format: date-time
          type: string
        default_org_id:
          type: string
      required:
        - name
        - email
        - nickname
        - email_verified
        - picture
        - created_on
        - created_by
        - invited_on
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
        - joined_on
        - default_org_id
    CreateUserDto:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        nickname:
          type: string
        email_verified:
          type: boolean
        picture:
          type: string
        joined_on:
          format: date-time
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        invited_on:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - name
        - email
        - nickname
        - email_verified
        - picture
        - joined_on
        - created_on
        - created_by
        - invited_on
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    CreateWeeklyReportDto:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        category:
          type: number
        response_time:
          type: number
        run_number:
          type: number
        weekly_average:
          type: number
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
      required:
        - method
        - path
        - category
        - response_time
        - run_number
        - weekly_average
        - org_id
        - app_id
    TPS:
      type: object
      properties:
        category:
          type: string
        is_critical_path:
          type: boolean
        is_pass:
          type: boolean
        method:
          type: string
        priority:
          type: string
        reason:
          type: string
        response_size:
          type: number
        response_status:
          type: string
        response_time:
          type: number
        status:
          type: string
        test_case:
          type: array
          items:
            type: object
        title:
          type: string
      required:
        - test_case
    CreateTestPlanDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        cron:
          type: string
        testRegion:
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          enum:
            - STANDARD
            - GET
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        aiLearnPolicy:
          enum:
            - STANDARD
            - RELEARN
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        tps:
          $ref: '#/components/schemas/TPS'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    TestPlan:
      type: object
      properties:
        openapi_spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        testRegion:
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - PRO
          type: string
        performance:
          default: High-Performance
          enum:
            - High-Performance
            - Medium-Performance
            - Low-Performance
          type: string
        coveragePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - GET
          type: string
        aiLearnPolicy:
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        tps:
          $ref: '#/components/schemas/TPS'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - openapi_spec
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    Test_Plan_Run:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    CreateApiCatalogDto:
      type: object
      properties:
        source:
          type: string
        version:
          type: string
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        runnerType:
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
          type: string
        categoryProfile:
          type: string
        auth:
          type: string
        non_owner_auth:
          type: string
        non_entitled_auth:
          type: string
        low_privilege_auth:
          type: string
        cross_env_auth:
          type: string
        cross_application_auth:
          type: string
        cron:
          type: string
        testRegion:
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          enum:
            - STANDARD
            - GET
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        aiLearnPolicy:
          enum:
            - STANDARD
            - RELEARN
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        governance_email:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        dsr:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        rbac_auths:
          type: array
          items:
            type: string
        api_type:
          type: string
      required:
        - org_id
        - governance_email
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    AwsSpecDto:
      type: object
      properties:
        stageName:
          type: string
        restApiId:
          type: string
      required:
        - stageName
        - restApiId
    MuleSoftSpecDto:
      type: object
      properties:
        assetId:
          type: string
        version:
          type: string
      required:
        - assetId
        - version
    ObjectId:
      type: object
      properties: {}
    GetSpecsDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        productIds:
          type: array
          items:
            type: string
        awsRestIds:
          type: array
          items:
            $ref: '#/components/schemas/AwsSpecDto'
        muleSoftIds:
          type: array
          items:
            $ref: '#/components/schemas/MuleSoftSpecDto'
        kongIds:
          type: array
          items:
            $ref: '#/components/schemas/KongSpecDto'
      required:
        - id
    AuthDetailsDto:
      type: object
      properties:
        authenticationUrl:
          type: string
        authenticationBody:
          type: string
        authorizationHeaders:
          type: string
      required:
        - authenticationUrl
        - authenticationBody
        - authorizationHeaders
    ScheduleRunMultipleDto:
      type: object
      properties:
        services:
          type: string
          enum:
            - PRIVACY
            - SECURITY
            - GOVERNANCE
            - RELEASE
            - VERSION
            - CONTRACT
        appId:
          $ref: '#/components/schemas/ObjectId'
        label:
          type: string
        openApiUrl:
          type: string
        basePath:
          type: string
        profile:
          type: string
        runMode:
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        buildMode:
          type: string
          enum:
            - OK
            - TEST
        testAccount1:
          $ref: '#/components/schemas/AuthDetailsDto'
        testAccount2:
          $ref: '#/components/schemas/AuthDetailsDto'
        fail_on_new_leaks:
          type: boolean
          default: true
      required:
        - services
        - appId
        - label
        - openApiUrl
        - basePath
        - profile
        - runMode
        - buildMode
        - fail_on_new_leaks
    GatewayDetails:
      type: object
      properties:
        name:
          type: string
        gateway:
          type: string
      required:
        - name
        - gateway
    ApiCatalog:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        expired_auth:
          type: string
        non_owner_auth:
          type: string
        non_entitled_auth:
          type: object
        low_privilege_auth:
          type: string
        cross_env_auth:
          type: string
        cross_application_auth:
          type: string
        headers:
          type: array
          items:
            type: string
        custom_id:
          type: string
        cron:
          type: string
        testRegion:
          type: string
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
        performancePolicy:
          type: string
          default: STANDARD
          enum:
            - STANDARD
            - PRO
        coveragePolicy:
          type: string
          default: STANDARD
          enum:
            - STANDARD
            - GET
        aiLearnPolicy:
          type: string
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
        schedulePolicy:
          type: string
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        governance_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        isGatewayApi:
          type: boolean
        gatewayDetails:
          $ref: '#/components/schemas/GatewayDetails'
        dsr:
          type: boolean
        midnight_run:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        runnerType:
          type: string
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
        categoryProfile:
          type: string
        rbac_auths:
          type: array
          items:
            type: string
        registrationStatus:
          type: string
          enum:
            - PENDING
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - CANCELLED
        api_type:
          type: string
      required:
        - org_id
        - created_on
        - created_by
        - created_by_email
        - governance_email
        - modified_by
        - modified_by_email
        - modified_on
    DAS:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        id:
          type: string
        category:
          type: string
        priority:
          type: string
        summary:
          type: string
        remediation:
          type: string
        tag:
          type: string
        status:
          type: object
      required:
        - method
        - path
        - id
        - category
        - priority
        - summary
        - remediation
        - tag
    CreateDesignAnalysisDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        cron:
          type: string
        testRegion:
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          enum:
            - STANDARD
            - GET
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        aiLearnPolicy:
          enum:
            - STANDARD
            - RELEARN
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        das:
          type: array
          items:
            $ref: '#/components/schemas/DAS'
        totalChecks:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        issues:
          type: number
        non_owner_auth:
          type: string
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    DesignAnalysis:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        non_owner_auth:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        buildMode:
          type: object
        testRegion:
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - PRO
          type: string
        performance:
          default: High-Performance
          enum:
            - High-Performance
            - Medium-Performance
            - Low-Performance
          type: string
        coveragePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - GET
          type: string
        aiLearnPolicy:
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        totalChecks:
          type: string
        das:
          type: array
          items:
            $ref: '#/components/schemas/DAS'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        source:
          type: string
        midnight_run:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        registrationStatus:
          enum:
            - PENDING
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - CANCELLED
          type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    Mixed:
      type: object
      properties: {}
    Das_Run:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        summary:
          $ref: '#/components/schemas/Mixed'
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    UpdateCategoryStatusDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        category_id:
          $ref: '#/components/schemas/ObjectId'
      required:
        - id
        - category_id
    AppCategories:
      type: object
      properties: {}
    UpdateAppCategoryDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        active:
          type: boolean
      required:
        - id
        - active
    UpdateIssueStatusDto:
      type: object
      properties:
        app_id:
          $ref: '#/components/schemas/ObjectId'
        id:
          $ref: '#/components/schemas/ObjectId'
      required:
        - app_id
        - id
    CreateVersionManagementDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        cron:
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        auto_release:
          enum:
            - 'ON'
            - 'OFF'
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    META:
      type: object
      properties:
        latest_run:
          $ref: '#/components/schemas/LatestRun'
    VersionManagement:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        source:
          type: string
        version:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        metaData:
          $ref: '#/components/schemas/META'
        auto_release:
          default: 'ON'
          enum:
            - 'ON'
            - 'OFF'
          type: string
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        buildMode:
          type: object
        midnight_run:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        registrationStatus:
          enum:
            - PENDING
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - CANCELLED
          type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    VmsRun:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        isScheduledJob:
          type: boolean
        changesCount:
          type: number
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
        summary:
          $ref: '#/components/schemas/Mixed'
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - org_id
        - app_id
        - status
        - run_number
        - isScheduledJob
        - changesCount
        - created_date
        - next_date
    UpdateVersionNumberDto:
      type: object
      properties:
        appId:
          type: string
        autoRelease:
          type: string
          enum:
            - 'ON'
            - 'OFF'
        semVer:
          type: string
          pattern: /^\d+\.\d+\.\d+$/
        calVer:
          type: string
          pattern: /^\d{4}\.\d{2}\.\d{2}$/
      required:
        - appId
        - autoRelease
        - semVer
        - calVer
    SendReleaseDto:
      type: object
      properties:
        appId:
          type: string
      required:
        - appId
    CreateSensitiveDataDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        low_privilege_auth:
          type: string
        non_entitled_auth:
          type: string
        cross_env_auth:
          type: string
        cross_application_auth:
          type: string
        cron:
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalFields:
          type: number
        totalEndpoints:
          type: number
        testDataCount:
          type: number
        vulnerabilitiesCount:
          type: number
        totalPiiFieldsFound:
          type: number
        privacyStatus:
          type: string
        non_owner_auth:
          type: string
        dsr:
          type: object
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        skip_endpoints:
          type: string
        key_values:
          type: string
        runnerType:
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
          type: string
        categoryProfile:
          type: string
        rbac_auths:
          type: array
          items:
            type: string
        api_type:
          type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    SensitiveData:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        auth:
          type: string
        non_owner_auth:
          type: string
        expired_auth:
          type: string
        non_entitled_auth:
          type: object
        low_privilege_auth:
          type: string
        cross_env_auth:
          type: string
        cross_application_auth:
          type: string
        dismissedIssues:
          type: array
          items:
            type: string
        issueSeverities:
          $ref: '#/components/schemas/Mixed'
        label:
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        source:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        mode:
          type: object
        buildMode:
          type: object
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        metaData:
          $ref: '#/components/schemas/META'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        privacyStatus:
          type: string
        aiErrorsCount:
          type: number
        issuesCount:
          type: number
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        midnight_run:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        runnerType:
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
          type: string
        categoryProfile:
          type: string
        rbac_auths:
          type: array
          items:
            type: string
        registrationStatus:
          enum:
            - PENDING
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - CANCELLED
          type: string
        api_type:
          type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    RunDetails:
      type: object
      properties:
        categories_to_run:
          type: array
          items:
            type: string
            enum:
              - Authentication_Invalid
              - Authentication_Valid
              - Authorization_Missing
              - Authorization_Invalid
              - Authorization_Expired
              - Authorization_Valid
              - RBAC
              - DB_Read
              - DB_Write
              - BOLA
              - Pagination_Invalid
              - Rate_Limit_Exist
              - Date_Filter_Invalid
              - SSRF
              - Privilege_Escalation
              - CORS_Exist
              - Audit_Data_Tampering
              - Broken_Token_Signature_Verification
              - Broken_Token_Tampered_Payload
              - Monitoring_Endpoint
              - BPLA
              - BTLA
              - BRLA
              - SQL_Injection
              - NOSQL_Injection
              - Cross_Environment_Token_Acceptance
              - Cross_Application_Token_Acceptance
              - Search_Data_Leak
              - Broken_Revoke
              - Broken_Logout
    OrgUser:
      type: object
      properties:
        org_id:
          type: string
        user_id:
          type: string
        user_email:
          type: string
        role:
          type: string
        status:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        invited_on:
          format: date-time
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - user_email
        - status
        - created_on
        - created_by
        - invited_on
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    FieldLogsDto:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        fieldName:
          type: string
        label:
          type: string
        endpoint_id:
          type: string
      required:
        - method
        - path
        - fieldName
        - label
        - endpoint_id
    ApiContextDto:
      type: object
      properties:
        totalCount:
          type: number
        accessRequiredCount:
          type: number
        learnedCount:
          type: number
        learningRequiredCount:
          type: number
    SdsRun:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        summary:
          $ref: '#/components/schemas/Mixed'
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        apiStats:
          $ref: '#/components/schemas/ApiContextDto'
        runnerType:
          type: string
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
        categories_to_run:
          type: array
          items:
            type: string
            enum:
              - Authentication_Invalid
              - Authentication_Valid
              - Authorization_Missing
              - Authorization_Invalid
              - Authorization_Expired
              - Authorization_Valid
              - RBAC
              - DB_Read
              - DB_Write
              - BOLA
              - Pagination_Invalid
              - Rate_Limit_Exist
              - Date_Filter_Invalid
              - SSRF
              - Privilege_Escalation
              - CORS_Exist
              - Audit_Data_Tampering
              - Broken_Token_Signature_Verification
              - Broken_Token_Tampered_Payload
              - Monitoring_Endpoint
              - BPLA
              - BTLA
              - BRLA
              - SQL_Injection
              - NOSQL_Injection
              - Cross_Environment_Token_Acceptance
              - Cross_Application_Token_Acceptance
              - Search_Data_Leak
              - Broken_Revoke
              - Broken_Logout
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    UpdateImpactStatusDto:
      type: object
      properties:
        endpoint_id:
          type: string
        name:
          type: string
        location:
          type: string
      required:
        - endpoint_id
    DismissEndpointIssueDto:
      type: object
      properties:
        endpoint_id:
          type: string
        issue_id:
          type: string
        issue:
          type: string
        endpoint_ids:
          type: array
          items:
            type: string
        comment:
          type: string
        field:
          type: string
        fieldType:
          type: string
      required:
        - endpoint_id
        - issue_id
        - issue
        - endpoint_ids
        - comment
        - field
        - fieldType
    ErroneousEndpoints:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
      required:
        - method
        - path
    DismissPartialEndpointsIssueDto:
      type: object
      properties:
        issue_id:
          type: string
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/ErroneousEndpoints'
      required:
        - issue_id
        - endpoints
    DismissAppIssueDto:
      type: object
      properties:
        app_id:
          type: string
        issue_id:
          type: string
        issue:
          type: string
        comment:
          type: string
        url:
          type: string
        notes:
          type: string
      required:
        - app_id
        - issue_id
        - issue
        - comment
        - url
        - notes
    RemoveFieldsDto:
      type: object
      properties:
        location:
          type: string
          enum:
            - Custom
            - Ignored
        fieldName:
          type: string
      required:
        - location
        - fieldName
    HeadersDto:
      type: object
      properties:
        userAgent:
          type: string
        Referer:
          type: string
    RequestDto:
      type: object
      properties:
        host:
          type: string
        ip:
          type: string
        geolocation:
          type: string
        timestamp:
          type: string
        headers:
          $ref: '#/components/schemas/HeadersDto'
    SsrfDto:
      type: object
      properties:
        token:
          type: string
        request:
          $ref: '#/components/schemas/RequestDto'
    CreateIssueDto:
      type: object
      properties:
        category:
          type: string
        severity:
          type: string
        ssrf:
          $ref: '#/components/schemas/SsrfDto'
    UpdateIssueSeverityDto:
      type: object
      properties:
        issue_id:
          type: string
        severity:
          type: string
          enum:
            - Critical
            - High
            - Medium
            - Low
      required:
        - issue_id
        - severity
    TestCategoryDTO:
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
        type:
          type: string
        tags:
          type: array
          items:
            type: string
        severity:
          type: string
        status:
          type: string
        visibility:
          type: string
        hits:
          type: number
        description:
          type: object
        prompt:
          type: string
        user_id:
          $ref: '#/components/schemas/ObjectId'
        modified_by:
          $ref: '#/components/schemas/ObjectId'
        author:
          type: string
        categories:
          type: array
          items:
            type: object
      required:
        - name
        - tags
        - severity
        - status
    CreateApiGatewayAccDto:
      type: object
      properties:
        gateway:
          type: string
          enum:
            - Apigee
            - AWS
            - Mulesoft
            - Kong
        name:
          type: string
        connection_status:
          type: string
        auto_register:
          type: boolean
        apigee:
          type: object
        aws:
          type: object
        mulesoft:
          type: object
        kong:
          type: object
        field1:
          type: string
        field2:
          type: string
        field3:
          type: string
        field4:
          type: string
        field5:
          type: string
        field6:
          type: string
      required:
        - gateway
        - name
        - connection_status
    UpdateApiGatewayAccDto:
      type: object
      properties:
        gateway:
          type: string
          enum:
            - Apigee
            - AWS
            - Mulesoft
            - Kong
        name:
          type: string
        connection_status:
          type: string
        auto_register:
          type: boolean
        apigee:
          type: object
        aws:
          type: object
        mulesoft:
          type: object
        kong:
          type: object
        field1:
          type: string
        field2:
          type: string
        field3:
          type: string
        field4:
          type: string
        field5:
          type: string
        field6:
          type: string
        account_id:
          $ref: '#/components/schemas/ObjectId'
      required:
        - gateway
        - name
        - connection_status
        - account_id
    KongSpecDto:
      type: object
      properties:
        productId:
          type: string
        versionId:
          type: string
        displayName:
          type: string
      required:
        - productId
        - versionId
        - displayName
    TestConnectionDto:
      type: object
      properties:
        accId:
          $ref: '#/components/schemas/ObjectId'
      required:
        - accId
    GetTokenDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    CreateDsrRequestDto:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        otp:
          type: string
        phoneNumber:
          type: string
        regulation:
          type: string
        identifier:
          type: string
        reason:
          type: string
        country:
          type: string
        type:
          type: string
        email:
          type: string
        name:
          type: string
        details:
          type: string
        deleteInfo:
          type: boolean
          default: true
      required:
        - org_id
        - app_id
        - otp
        - type
        - email
        - name
    DSRRequests:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        regulation:
          type: string
        country:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        identifier:
          type: string
        org_name:
          type: string
        app_name:
          type: string
        details:
          type: string
        reason:
          type: string
        assignedTo:
          type: string
        dueDate:
          format: date-time
          type: string
        comment:
          type: string
        catalog_id:
          type: string
        app_id:
          type: string
        org_id:
          type: string
        status:
          type: object
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
      required:
        - name
        - type
        - email
        - catalog_id
        - app_id
        - org_id
        - created_on
        - created_by
    VerifyEmailDto:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        email:
          type: string
      required:
        - org_id
        - app_id
        - email
    ResolveRequestDto:
      type: object
      properties:
        request_id:
          type: string
        comment:
          type: string
      required:
        - request_id
    Params:
      type: object
      properties:
        name:
          type: string
        in_:
          type: string
        required:
          type: boolean
        type:
          type: string
        format:
          type: string
        default_:
          type: string
        description:
          type: string
        values:
          type: array
          items:
            type: string
        value:
          type: string
        enums:
          type: array
          items:
            type: string
        reqSchema:
          type: string
        resSchema:
          type: string
        schema:
          type: object
      required:
        - name
        - in_
        - required
        - type
        - format
        - default_
        - description
        - values
        - value
        - enums
        - reqSchema
        - resSchema
    Match:
      type: object
      properties:
        reqPath:
          type: string
        reqType:
          type: string
        resEndpoint:
          $ref: '#/components/schemas/Endpoint'
        resPath:
          type: string
        resType:
          type: string
        location:
          type: object
      required:
        - reqPath
        - reqType
        - resEndpoint
        - resPath
        - resType
        - location
    Issue:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        category:
          type: string
        id:
          type: string
        changeType:
          type: string
          enum:
            - MAJOR
            - MINOR
            - PATCH
            - NONE
        priority:
          type: string
          enum:
            - HIGH
            - MEDIUM
            - LOW
        remediation:
          type: string
        tag:
          type: string
      required:
        - method
        - path
        - category
        - id
        - changeType
        - priority
        - remediation
        - tag
    Endpoint:
      type: object
      properties:
        _id:
          type: object
          default: null
        method:
          type: string
        summary:
          type: string
        operationId:
          type: string
        basePath:
          type: string
        path:
          type: string
        security:
          type: object
        queryParams:
          type: array
          items:
            $ref: '#/components/schemas/Params'
        pathParams:
          type: array
          items:
            $ref: '#/components/schemas/Params'
        headerParams:
          type: array
          items:
            $ref: '#/components/schemas/Params'
        url:
          type: string
        urls:
          default: []
          type: array
          items:
            type: string
        optionalParamUrls:
          default: []
          type: array
          items:
            type: string
        headers:
          type: array
          items:
            type: string
        errors:
          type: boolean
        statusCodes:
          type: array
          items:
            type: number
        enums:
          type: array
          items:
            type: string
        requestSchema:
          type: object
        responseSchema:
          type: object
        responseSchemas:
          type: object
        matches:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/Match'
        body:
          type: object
        bodies:
          type: array
          items:
            type: object
        status:
          type: number
          default: 0
        statuses:
          default: []
          type: array
          items:
            type: number
        learnStatus:
          default: NON_WORKING
          enum:
            - WORKING
            - NON_WORKING
            - SKIPPED
            - LEARNED
            - UNLEARNED
          type: string
        learnReason:
          type: string
          default: ''
        response:
          type: object
        score:
          type: number
          default: 0
        app_id:
          type: string
          default: ''
        create_date:
          format: date-time
          type: string
          default: 2025-04-01T17:45:37.761Z
        modified_date:
          format: date-time
          type: string
          default: 2025-04-01T17:45:37.761Z
        extra:
          type: boolean
          default: false
        id:
          type: string
          default: ''
        category:
          type: string
          default: ''
        test_case:
          type: string
          default: ''
        issues:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/Issue'
        resourceName:
          type: string
          default: ''
      required:
        - _id
        - method
        - summary
        - operationId
        - basePath
        - path
        - security
        - queryParams
        - pathParams
        - headerParams
        - url
        - urls
        - optionalParamUrls
        - headers
        - errors
        - statusCodes
        - enums
        - requestSchema
        - responseSchema
        - responseSchemas
        - matches
        - body
        - bodies
        - status
        - statuses
        - learnStatus
        - learnReason
        - response
        - score
        - app_id
        - create_date
        - modified_date
        - extra
        - id
        - test_case
        - issues
    CreateUpdateEndpointRequestDTO:
      type: object
      properties:
        sensitive_data_id:
          type: string
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        spec:
          type: string
        fields_to_update:
          type: object
          properties:
            body:
              required: true
              type: object
            url:
              required: true
              type: string
        api_id:
          type: string
        base_path:
          type: string
        endpoint_id:
          type: string
      required:
        - sensitive_data_id
        - endpoint
        - spec
        - fields_to_update
    CreateAgentDto:
      type: object
      properties:
        agent_id:
          type: string
        ip_address:
          type: string
        created_by:
          type: string
      required:
        - agent_id
        - ip_address
    Agent:
      type: object
      properties:
        agent_id:
          type: string
        ip_address:
          type: string
        created_by:
          type: string